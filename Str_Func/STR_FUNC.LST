Turbo Assembler	 Version 4.1	    02/18/24 25:07:47	    Page 1
str_func.asm



      1	0000			     .model tiny
      2	0000			     .code
      3				     .286
      4				     org 100h
      5				     locals @@
      6
      7
      8	0100			     Start:
      9	0100  E9 009C			     jmp main
     10
     11	0103			     MyStrlen proc
     12
     13	0103  55			      push bp
     14	0104  8B EC			      mov bp, sp
     15
     16	0106  8E 46 06			      mov es, ss:[bp + 6]
     17	0109  8B 7E 04			      mov di, ss:[bp + 4]
     18
     19	010C  FC			      cld
     20
     21	010D  B9 FFFF			      mov cx, -1
     22
     23	0110  B0 24			      mov al, '$'
     24	0112  F2> AE			      repne scasb
     25
     26	0114  F7 D9			      neg cx
     27	0116  83 E9 02			      sub cx, 2
     28
     29	0119  8B D1			      mov dx, cx
     30
     31	011B  5D			      pop bp
     32
     33	011C  C3			      ret
     34	011D				      endp
     35
     36
     37	011D			     MyMemChr  proc
     38
     39	011D  55			       push bp
     40	011E  8B EC			       mov bp, sp
     41
     42	0120  8E 46 0A			       mov es, ss:[bp +	10]		; ds
     43	0123  8B 7E 08			       mov di, ss:[bp +	8]		; &string
     44	0126  8A 46 06			       mov al, ss:[bp +	6]		; symbol
     45	0129  8B 4E 04			       mov cx, ss:[bp +	4]
     46
     47	012C  F2> AE			       repne scasb
     48
     49	012E  8B DF			       mov bx, di
     50	0130  83 EB 01			       sub bx, 1
     51
     52	0133  26: 38 07			       cmp es:[bx], al
     53	0136  74 08			       je @@return
     54
     55	0138  83 F9 00			       cmp cx, 0
     56	013B  75 03			       jne @@return
     57
Turbo Assembler	 Version 4.1	    02/18/24 25:07:47	    Page 2
str_func.asm



     58	013D  B8 0000			       mov ax, 0
     59
     60	0140				       @@return:
     61	0140  5D				   pop bp
     62	0141  C3				   ret
     63	0142					   endp
     64
     65
     66	0142			     MyMemset  proc
     67
     68	0142  55			       push bp
     69	0143  8B EC			       mov bp, sp
     70
     71	0145  8E 46 0A			       mov es, ss:[bp +	10]		; ds
     72	0148  8B 7E 08			       mov di, ss:[bp +	8]		; &string
     73	014B  8A 46 06			       mov al, ss:[bp +	6]		; symbol
     74	014E  8B 4E 04			       mov cx, ss:[bp +	4]
     75
     76	0151				       @@cycle:
     77	0151  26: 88 05				   mov es:[di],	al
     78	0154  47				   inc di
     79	0155  E2 FA				   loop	@@cycle
     80
     81	0157  5D			       pop bp
     82	0158  C3			       ret
     83	0159				       endp
     84
     85	0159			     MyMemCpy  proc				; FIX
     86
     87	0159  55			       push bp
     88	015A  8B EC			       mov bp, sp
     89
     90	015C  8E 46 0A			       mov es, ss:[bp +	10]		; ds
     91	015F  8B 7E 08			       mov di, ss:[bp +	8]		; &string1
     92	0162  8B 76 06			       mov si, ss:[bp +	6]		; &string2
     93	0165  8B 4E 04			       mov cx, ss:[bp +	4]		; fix cross elements
     94
     95	0168  F3> A4			       rep movsb
     96
     97	016A  5D			       pop bp
     98	016B  C3			       ret
     99	016C				       endp
    100
    101	016C			     MyMovMem  proc
    102
    103	016C  55			       push bp
    104	016D  8B EC			       mov bp, sp
    105
    106	016F  8E 46 0A			       mov es, ss:[bp +	10]		; ds
    107	0172  8B 7E 08			       mov di, ss:[bp +	8]		; &string1
    108	0175  8B 76 06			       mov si, ss:[bp +	6]		; &string2
    109	0178  8B 4E 04			       mov cx, ss:[bp +	4]		; fix cross elements
    110
    111	017B  F3> A4			       rep movsb
    112
    113	017D  5D			       pop bp
    114
Turbo Assembler	 Version 4.1	    02/18/24 25:07:47	    Page 3
str_func.asm



    115	017E  C3			       ret
    116	017F				       endp
    117
    118
    119	017F			     MyMemCmp  proc
    120
    121	017F  55			       push bp
    122	0180  8B EC			       mov bp, sp
    123
    124	0182  8E 46 0A			       mov es, ss:[bp +	10]		; ds
    125	0185  8B 7E 08			       mov di, ss:[bp +	8]		; &string1
    126	0188  8B 76 06			       mov si, ss:[bp +	6]		; &string2
    127	018B  8B 4E 04			       mov cx, ss:[bp +	4]		; fix cross elements
    128	018E  4F			       dec di
    129
    130	018F				       @@cycle:
    131	018F  AC				   lodsb
    132	0190  47				   inc di
    133	0191  26: 3A 05				   cmp al, byte	ptr es:[di]
    134	0194  75 02				   jne @@comparation
    135
    136	0196  E2 F7				   loop	@@cycle
    137
    138	0198				       @@comparation:
    139	0198  26: 2A 05				   sub al, byte	ptr es:[di]
    140	019B  F6 D8				   neg al
    141
    142	019D					   @@return:
    143	019D  5D					  pop bp
    144	019E  C3					  ret
    145	019F						  endp
    146
    147	019F			     main:
    148	019F  BB 0000r			    mov	bx, offset String1
    149	01A2  1E			    push ds
    150	01A3  53			    push bx
    151
    152					    ;call MyStrlen		 ; 1
    153
    154					    ;push 'w'
    155					    ;push 7
    156					    ;call MyMemChr		 ; 2
    157
    158					    ;push '2'
    159					    ;push 5
    160					    ;call MyMemset		 ; 3
    161
    162					    ;mov dx, offset String2
    163					    ;push dx
    164					    ;push 7
    165					    ;call MyMemCpy
    166
    167	01A4  BA 000Cr			    mov	dx, offset String2
    168	01A7  52			    push dx
    169	01A8  6A 07			    push 7
    170	01AA  E8 FFD2			    call MyMemCmp
    171
Turbo Assembler	 Version 4.1	    02/18/24 25:07:47	    Page 4
str_func.asm



    172
    173	01AD			     exit:
    174	01AD  B8 4C00			    mov	ax, 4c00h
    175	01B0  CD 21			     int 21h
    176
    177	01B2			     .data
    178
    179	0000  68 65 6C 6C 79 5F	77+  String1: db 'helly_world$'
    180	      6F 72 6C 64 24
    181	000C  68 65 6C 6C 6F 5F	77+  String2: db 'hello_world$'
    182	      6F 72 6C 64 24
    183
    184				     end Start
Turbo Assembler	 Version 4.1	    02/18/24 25:07:47	    Page 5
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/18/24"
??FILENAME			  Text	 "str_func"
??TIME				  Text	 "25:07:47"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@COMPARATION			  Near	 DGROUP:0198
@@CYCLE				  Near	 DGROUP:0151
@@CYCLE				  Near	 DGROUP:018F
@@RETURN			  Near	 DGROUP:0140
@@RETURN			  Near	 DGROUP:019D
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0707H
@CURSEG				  Text	 _DATA
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 STR_FUNC
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
EXIT				  Near	 DGROUP:01AD
MAIN				  Near	 DGROUP:019F
MYMEMCHR			  Near	 DGROUP:011D
MYMEMCMP			  Near	 DGROUP:017F
MYMEMCPY			  Near	 DGROUP:0159
MYMEMSET			  Near	 DGROUP:0142
MYMOVMEM			  Near	 DGROUP:016C
MYSTRLEN			  Near	 DGROUP:0103
START				  Near	 DGROUP:0100
STRING1				  Near	 DGROUP:0000
STRING2				  Near	 DGROUP:000C

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0018 Word	  Public  DATA
  _TEXT				  16  01B2 Word	  Public  CODE
